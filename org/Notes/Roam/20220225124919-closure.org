:PROPERTIES:
:ID:       c71c083c-ebe1-4f4b-974e-f265863ecac7
:END:
#+title: Closure

* Definition
A closure is the combination of a function and an enclosed lexical environment, which allows you to access the outer functions state from an inner function.

* Example
A typical example would be a counter function in scheme where we initialize a value and enclose it within the returned procedure that is bound the calling variable.
#+begin_src scheme
  (define counter
    (lambda ()
      (let ((count 0))
        (lambda ()
          (set! count (+ count 1))
          count))))

  (define c1 (counter))
  (define c2 (counter))
#+end_src
We can then bind variables to the returned procedure of the counter procedure, which allows to have to separate counter values.
