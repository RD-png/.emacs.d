:PROPERTIES:
:ID:       db423b3f-21e1-4a87-b330-d86447e53cc3
:END:
#+title: Laravel-Validation
* Request Validation
There are multiple approaches to validating request inputs, one example is to define conditions that must be met for each field expected to be passed to a route, for example
#+begin_src php
  $request->validate([
      'title' => 'required|unique:posts|max:255',
      'author.name' => 'required',
      'author.description' => 'required',
  ]);
#+end_src

The validation rules are quite extensive so refer back to the laravel documentation, there is too much to cover to summarize here

* Rule Objects To Validate Requests
We can define custom rules using make:rule, these classes will extend laravels Rule class and will be stored under the app/rules directory

An Example, we may wish to create a rule called uppercase, where we need to check that the first letter of the value is uppercase, we could do that using the following syntax.
#+begin_src php
  use Illuminate\Contracts\Validation\Rule;

  class Uppercase implements Rule
  {
      public function passes($attribute, $value)
      {
          return strtoupper($value) === $value;
      }
  }
#+end_src

We could then use this class a rule that we could apply to a field in our validate function call, which can be seen above.

