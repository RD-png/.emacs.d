:PROPERTIES:
:ID:       6eec5203-3af4-4567-8da7-cf28099a64a2
:END:
#+title: Laravel
* App Directory
The core of the application, will contain the majority of the applications classes
** Console / Http
These can be considered as providing an API into the application, http and cli and the main methods of interaction with the system, but this folder will not contain application logic. There are two ways we can access the applications functionality, either by the CLI (Console), or via HTTP (Http). We can seperate the functionality between the two.

** Console
The Console directory contains all of the custom Artisan commands for your application.
This directory also houses your console kernel, which is where your custom Artisan commands are registered.

** Http
The Http directory contains your controllers, middleware, and form requests. Almost all of the logic to handle requests entering your application will be placed in this directory.

** Jobs
Allows the user to stack jobs, that can be run synchronously in the current cycle. Jobs that run synchronously during the current request are sometimes referred to as "commands" since they are an implementation of the command pattern.

** Listener
This directory does not exist by default, but will be created for you if you execute the event:generate or make:listener Artisan commands. The Listeners directory contains the classes that handle your events. Event listeners receive an event instance and perform logic in response to the event being fired. For example, a UserRegistered event might be handled by a SendWelcomeEmail listener.

** Mail
Does not exist by defauly but can be added to support email intergration in the application.

** Models
The Models directory contains all of your Eloquent model classes. Each database table has a corresponding "Model" which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table.

** Notifications
This directory does not exist by default, but will be created for you if you execute the make:notification Artisan command. The Notifications directory contains all of the "transactional" notifications that are sent by your application, such as simple notifications about events that happen within your application. Laravel's notification feature abstracts sending notifications over a variety of drivers such as email, Slack, SMS, or stored in a database.

** Policy
This directory does not exist by default, but will be created for you if you execute the make:policy Artisan command. The Policies directory contains the authorization policy classes for your application. Policies are used to determine if a user can perform a given action against a resource.

** Providers
The Providers directory contains all of the service providers for your application. Service providers bootstrap your application by binding services in the service container, registering events, or performing any other tasks to prepare your application for incoming requests.

** Rules
This directory does not exist by default, but will be created for you if you execute the make:rule Artisan command. The Rules directory contains the custom validation rule objects for your application. Rules are used to encapsulate complicated validation logic in a simple object. For more information, check out the validation documentation.

** Events
This does not exist by default, but will be created for you by the event:generate and make:event Artisan commands. The Events directory houses event classes. Events may be used to alert other parts of your application that a given action has occurred.

** Make
Using the make command, for example make:job, will cause a class called Jobs to be generated in the App directory.

* Broadcast
This directory does not exist by default but may be useful in the future.

* Bootstrap Directory
Generally will not needed to be manually edited, this directory contains caching of routes and services etc. 

* Config Directory
Self explanatory, configuration of the application and server

* Database Directory
Contains database migrations, database models, can also store the sqlite database if we choose that as our database implementation.

* Public
Contains the index.php file which is the entry point for all request to the application, used to configure autoloading also.

* Routes
Define api routes for application, by default there are some routes defined for various laravel included functionality

* Storage Directory
Contains logs, blade files, can be used to store files generated by the application, the folder is segregated into sub-folders for the various sections of the application.

* Test
Self explanatory, contaions all the automated tests and unit tests we write for the application.

* Vendor
Composer dependencies

