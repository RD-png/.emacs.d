:PROPERTIES:
:ID:       46e58a29-7f01-4484-8808-ee502e5be6e4
:END:
#+title: Laravel-Collections
Collections provide some nice functionality that can be called on arrays, eloquent models are always returned as a collection

* Creating Collections
We can create collections using the following syntax
#+begin_src php
  $collection = collect([1, 2, 3]);
#+end_src
We can then apply any functionality in the Collection class on this array

* Extending Collections
We can create collection macros that can be applied to collection suing Collection::macro,
for example, macros can also take arguments
#+begin_src php
  Collection::macro('toUpper', function () {
      return $this->map(function ($value) {
          return Str::upper($value);
      });
  });

  $collection = collect(['first', 'second']);

  $upper = $collection->toUpper();
#+end_src
This is a nice way to abstract commonly required functionality that can be called on the collection object, rather than defining a function and passing the array to it.

The Collections class contains a large set of functionality that can be applied to collections which can be viewed [[https://laravel.com/docs/8.x/collections][here]].

* Method Listing
** All
Returns the underlying array represented by the collection
#+begin_src php
  $arr = collect()->all();
#+end_src

