;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-read-date-history query-replace-history org-tags-history read-number-history regexp-history consult--grep-history magit-revision-history file-name-history minibuffer-history buffer-name-history extended-command-history empty-history consult-imenu--history consult--line-history))
(setq query-replace-history '("t" ",cls" "org" "OrgFiles"))
(setq consult--grep-history '("#haskell-lang"))
(setq file-name-history '("~/.config/emacs/Emacs.org" "~/Documents/test.php" "~/.config/emacs/" "~/.config/emacs/etc/yasnippet/snippets/php-mode/tbCols" "~/.config/emacs/etc/yasnippet/snippets/php-mode/sel" "~/.config/emacs/etc/yasnippet/snippets/php-mode/rowidms" "~/.config/emacs/etc/yasnippet/snippets/php-mode/fp" "~/.config/emacs/etc/yasnippet/snippets/php-mode/forek" "~/.config/emacs/etc/yasnippet/snippets/php-mode/fore" "~/.config/emacs/etc/yasnippet/snippets/php-mode/vvfore" "~/.config/emacs/etc/yasnippet/snippets/php-mode/bindsms" "~/.config/emacs/etc/yasnippet/snippets/php-mode/binds" "~/.config/emacs/etc/yasnippet/snippets/php-mode/pr" "~/Documents/test.php" "~/.config/emacs/" "~/.config/emacs/org/Projects/emacs.org" "~/.config/emacs/org/Projects/Fespbi.org" "~/.config/emacs/org/Projects/Stock.org" "~/.config/emacs/org/Projects/Stock" "~/.config/emacs/org/Projects/StockControl.org" "~/.config/emacs/org/Projects/Fespbi.org" "~/.config/emacs/org/Projects/StockControl.org" "~/.config/emacs/org/Projects/ApiOrders.org" "~/.config/emacs/org/Projects" "~/.config/emacs/Emacs.org" "~/.config/emacs/straight/" "~/.config/emacs/.gitignore" "~/Documents/test.vue" "~/Documents/" "~/Documents/test.vue" "~/Documents/" "~/Documents/test.py" "~/.config/emacs/Emacs.org" "~/.config/emacs/test.txt" "~/Documents/test.php" "~/.nix-dotfiles/node_modules/test.txt" "~/.nix-dotfiles/node_modules" "~/.config/xmonad/xmonad.hs" "~/Documents/test.vue" "~/.config/emacs/.gitignore" "~/.config/emacs/Emacs.org" "~/Documents/test.php" "~/Documents/test.py" "~/.config/emacs/temp.el" "~/.nix-dotfiles/home-manager/modules/config/xmonad/xmonad.hs" "~/.config/emacs/elpa/orderless-20210812.2035/orderless.el" "/nix/store/lssrpjrfywp6hmjb19m72nk62f7j6fjr-emacs-pgtkgcc-20210816.0/share/emacs/28.0.50/src/TAGS" "~/.nix-dotfiles/home-manager/modules/config/emacs/OrgFiles/Tasks.org" "~/.config/emacs/OrgFiles/Tasks.org" "~/.config/emacs/elpa/popup-kill-ring-20131020.1854/popup-kill-ring.el" "~/.nix-dotfiles/home-manager/modules/config/emacs/straight/repos/embark/embark.el" "~/.config/emacs/straight/build/embark/embark.el" "/nix/store/lssrpjrfywp6hmjb19m72nk62f7j6fjr-emacs-pgtkgcc-20210816.0/share/emacs/28.0.50/src/minibuf.c" "/nix/store/lssrpjrfywp6hmjb19m72nk62f7j6fjr-emacs-pgtkgcc-20210816.0/share/emacs/28.0.50/lisp/emacs-lisp/nadvice.el.gz" "/nix/store/lssrpjrfywp6hmjb19m72nk62f7j6fjr-emacs-pgtkgcc-20210816.0/share/emacs/28.0.50/lisp/TAGS"))
(setq minibuffer-history '("company-auto-commit" "company-global-modes" "completion-styles" "company-files" "completion-list-mode" "orderless-matching-styles" "completion-category-overrides" "company-keywords-ignore-case" #("company-dabbrev-code-ignore-case" 0 32 (face nil)) "company-dabbrev-ignore-case" "company-files" "gnu.png" "history" "emacs" "company-text-icons-add-background" "company-tooltip-width-grow-only" "company-idle-delay" "2021-08-30           " "test" "bookmarks           " "bookmarks" "org-agenda-todo" "projectile-project-name" "message" "projectile-project-root" "~/.nix-dotfiles/" "mathNotes           " "mathNotes" "org-agenda-files" "append" "2021-08-24           " "s" "test" "flake.lock" "home-manager" "xmonad" "projectile-ag" "projectile-switch-to-buffer-other-window" "~/.nix-dotfiles/" "/.Emacs.org.~undo-tree~" "/var/auto-save/sessions/102650-nixos-desktop~" "/var/undo-tree-hist/.!root!.config!emacs!straight!build!lsp-mode!lsp-v.el.~undo-tree~" "home-manager/modules/config/shell/profile" "home-manager/flake.nix" "nixos/flake.nix" "lsp-vetur-server" "lsp-vetur-server-command" "lsp-v-vls-executable" "lsp-vetur-server-command" "lsp-vetur-server" "home-manager/modules/nixos-desktop.nix" "scroll-up-command" "scroll-conservatively" "display-buffer-reuse-mode-window" "display-buffer-base-action" "display-buffer-reuse-mode-window" "display-buffer-base-action" "display-buffer-reuse-mode-window" "display-buffer-base-action" "pretty-mode" "undo-tree-history-directory-alist" "projectile-switch-project-action" "initial-buffer-choice" "avy-single-candidate-jump" "auto-save-file-name-transforms" "completion-ignored-extensions" "doom-modeline-hud" "savehist-file" "prescient-save-file"))
(setq buffer-name-history '("magit: emacs" "test.php" "Emacs.org" "test.php" "*helpful variable: completion-styles*" "test.php" "Emacs.org" "test.php" "Emacs.org" "test.php" "*helpful command: company-files*" "test.php" "*scratch*" "magit: .nix-dotfiles" "emacs" "magit: emacs" "*Org Agenda*" "*dashboard*" "*Org Agenda*" ".nix-dotfiles" "Emacs.org" "magit: emacs" "NEWS" "Emacs.org" "gnu.png" "history" "elpa" "emacs" ".nix-dotfiles" "emacs" ".nix-dotfiles" "flake.lock" "home-manager" "ApiOrders.org" "magit: emacs" "themes" "Emacs.org" "magit: emacs" "bookmark-default.el" "test.php" "php-mode" "vvtbCols" "vvselms" "vvsel" "vvrowidms" "vvfp" "vvforek" "vvfore" "vvbindsms" "vvbinds" "realsnippetname" "*scratch*" "test.php" "vvp" "pr" "vvp" "pr" "test.php" "magit: emacs" "*helpful variable: company-text-icons-add-background*" "*dashboard*" "test.php" "magit: emacs" "test.php" "Emacs.org" ".nix-dotfiles" ".nix-dotfiles.org" "emacs" "emacs.org" "daily" "2021-08-30.org" "20210830164712-bookmarks.org" "*Org Agenda*" "Tasks.org" "root" "Emacs.org" "magit: emacs" "*Org Agenda*" "emacs.org" "Emacs.org" "emacs.org" ".nix-dotfiles.org" "emacs.org" "Emacs.org" "bookmark-default.el" "-.org" "*Messages*" ".nix-dotfiles.org" "*Org Agenda*" "-.org" "emacs" "emacs.org" "-.org" "*Messages*" "-.org" "emacs<.config>" "Emacs.org" "Ea" "*scratch*" "*Messages*"))
(setq extended-command-history '("company-prescient-mode" "prescient-persist-mode" "completion-list-mode" "company-prescient-mode" "yas-new-snippet" "org-agenda-todo" "org-agenda" "my/project-task" "projectile-project-info" "my/project-task" "make-directory" "org-schedule" "org-insert-subheading" "org-agenda-add-note" "dashboard-jump-to-recent-files" "consult-recent-file" "projectile-ripgrep" "projectile-switch-to-buffer" "projectile-multi-occur" "projectile-ibuffer" "projectile-ag" "org-agenda" "er/mark-outside-pairs" "highlight-changes-next-change" "magit-blame-previous-chunk" "magit-blame-next-chunk" "delete-windows-on" "embark-act" "org-agenda" "list-packages" "global-pretty-mode" "global-prettify-symbols-mode" "global-pretty-mode" "global-prettify-symbols-mode" "prettify-symbols-mode" "straight-pull-all" #("straight-pull-package" 0 21 (face nil)) "dashboard-mode" "avy-goto-char-2" "make-directory" "direnv-allow" "direnv-mode" "magit-gitignore" "emacs-version"))
(setq consult--line-history '("orderless" "Compan" "company-pre" "Compa" "Company" #("company" 0 7 (face nil)) "orderless" "order" "company" "orderless" "Compan" "Company" "orderless" "Com" "orderless" "orderles" "order" "orderless" "orderles" "orderless" "order" "Company" "company-pres" "Company" "Comple" "Com" "Comp" "Compl" "Com" "Company" "order" "Theme" "Av" "Avy" "avy" "avy-" "marginalia" "Compan" "Comp" "Compan" "company-dabbrev-downcase" "ignore-case" #("company-dab" 0 11 (face nil)) "downcas" #("company-dab" 0 11 (face nil)) #("company" 0 7 (face nil)) #("org-agenda" 0 10 (face nil)) "org-agend" "org-agenda" "org-age" "org-agenda-files" #("M-o" 0 3 (face nil)) #("find-file" 0 9 (face nil)) #("M-o" 0 3 (face nil)) "Emacs.org" "margina" "M-o" "agenda" "dashboard" "org-agenda" #("org-roam" 0 8 (face nil)) "Roam" "OrgFiles" "org-agenda" #("append" 0 6 (face nil)) #("org-agenda" 0 10 (face nil)) #("margin" 0 6 (face nil)) #("org-agenda" 0 10 (face nil)) "org" #("org-agenda" 0 10 (face nil)) #("org-roam" 0 8 (face nil)) "org-agenda" #("consult" 0 7 (face nil)) #("margin" 0 6 (face nil)) "auto-pack" "org" "use-pack" #("use-package" 0 11 (face nil)) "emacs" "built" #("use-package" 0 11 (face nil)) #("margina" 0 7 (face nil)) "lsp-py" "web" "vls" #("setenv" 0 6 (face nil)) "web-mode" #("setenv" 0 6 (face nil)) "web" #("setenv" 0 6 (face nil)) "web" "we" "Vue" "web" "haskell" "Pyt" "direnv" "scroll" "scroll-co"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
